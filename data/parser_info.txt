Data for this project is parsed using JSON, but with specific structures.
In the following examples, items in angle brackets <> are variable.
Anything not in angle brackets must be written exactly as is.

A sample entity:

"entity" : {
    "class" : "<the class of the entity, properly capitalized, ie. Door>",
    "location" : { <a location instance> },
    "interactable" : <true/false (optional)>,
    <other parameters that are class specific>
}

A sample location:

"location" : {
    "grid" : "<world for world map, or building name and floor number>",
    "x" : <x coordinate>,
    "y" : <y coordinate>,
    "direction" : <north, east, south, or west>
}

A sample interaction:

"interaction" : {
    "dialogue" : { <a dialogue instance> }
    "battle" : { <a battle instance> }
}

An interaction may have either a dialogue or a battle, but not both.
In order to add a battle to the end of a dialogue, create a dialogue
with an interaction in it.

A sample goal:

"goal" : {
    "entity" : { <the entity> },
    "location" : { <the location> },
    "interaction" : { <the interaction> }
}

A sample quest:

"quest" : {
    "id" : <unique identifier (int)>,
    "goals" : [ <array of goal instances> ]
}

A sample plot:

"plot" : {
    "dependencies" : [
        {
            "quest" : <ID of a quest (int)>
            "unlocks" : [ <array of IDs of all quests 'pre' unlocks> ]
        },
        <etc for each quest>
    ],
    "quests" : [ <array of quest instances> ]
}

A sample dialogue:

"dialogue" : {
    "text" : "<string of dialogue goes here>",
    "interaction" : { <an interaction instance> },
    "options" : {
        "header" : "<option header goes here>",
        "options" : [
            {
                "text" : "<option 1 text>",
                "interaction" : { <option 1 interaction> }
            },
            { <second option> },
            <etc>
        ]
    }
}

Dialogue may be specified in 4 ways:
  - text string only
  - text string plus interaction
  - options only
  - text string plus options
Additionally, the dialogue options interactions are optional.
Dialogue windows should be separated by <d>, as the newline "\n"
character is usable in dialogue windows.

A sample item:

"item" : {
    "class" : "<the class name, ie. Weapon>"
    "id" : <unique identifier (int)>,
    "name" : "<the name of the item>",
    "value" : <the value of the item (int)>,
    "modifier" : <the attack/defense modifier of weapons/armor (float)>,
    "bitmask" : <... not for SpecialItems (int)>
}

A sample spell:

"spell" : {
    "id" : <unique identifier (int)>,
    "name" : "<the name of the spell>",
    "modifier" : <the damage modifier of the spell (float)>,
    "mana" : <the mana cost of the spell (float)>
}

A sample enemy:

"enemy" : {
    "class" : "Enemy",
    "name" : "<the name of the enemy>",
    "battleclass" : "<the battle class of the enemy>",
    "level" : <the level of the enemy (int)>,
    "item" : { <the item the enemy has equipped (optional)> },
    "boss" : <true if this enemy is a boss, default to false>
}

A sample party:

"party" : {
    "characters" : [
        { <first party member> },
        { <second party member> },
        <etc>
    ]
}

A sample battle:

"battle" : {
    "enemy" : { <the enemy party> },
    "background" : "<the name of the background>"
}
